/**
 * Copyright (c) Beans factory Pte Ltd. All Rights Reserved.
 * Generated: 02-¾ÅÔÂ-2003 10:59:41
 * 
 * <p>
 * This SOURCE CODE FILE, which has been generated by Designer for use 
 * ONLY by licensed users of the product, includes CONFIDENTIAL and 
 * PROPRIETARY information of Beans Factory.  
 *
 */
package com.ttsoft.bjtax.shenbao.model.domain;
import java.sql.*;
import java.util.*;
import java.math.BigDecimal;
import com.ekernel.db.or.ORObject;

/**
* This is the entity / business object
* We will use this business object to demonstrate OR Mapping in Kernl can
* be used for composition.
**/
public class Sqsb implements ORObject {

	double kssl;
	String szsmmc;
	String szmc;
	String jsjdm;
	double jsje;
	String szdm;
	String szsmdm;
	double sjse;
	public Sqsb () {}
	public double getKssl() {
		return kssl;
	}
	public String getSzsmmc() {
		return szsmmc;
	}
	public String getSzmc() {
		return szmc;
	}
	public String getJsjdm() {
		return jsjdm;
	}
	public double getJsje() {
		return jsje;
	}
	public String getSzdm() {
		return szdm;
	}
	public String getSzsmdm() {
		return szsmdm;
	}
	public double getSjse() {
		return sjse;
	}
	public void setKssl( double _kssl ) {
		kssl = _kssl;
	}
	public void setKssl( BigDecimal _kssl ) {
		kssl = _kssl.doubleValue();
	}
	public void setSzsmmc( String _szsmmc ) {
		szsmmc = _szsmmc;
	}
	public void setSzmc( String _szmc ) {
		szmc = _szmc;
	}
	public void setJsjdm( String _jsjdm ) {
		jsjdm = _jsjdm;
	}
	public void setJsje( double _jsje ) {
		jsje = _jsje;
	}
	public void setJsje( BigDecimal _jsje ) {
		jsje = _jsje.doubleValue();
	}
	public void setSzdm( String _szdm ) {
		szdm = _szdm;
	}
	public void setSzsmdm( String _szsmdm ) {
		szsmdm = _szsmdm;
	}
	public void setSjse( double _sjse ) {
		sjse = _sjse;
	}
	public void setSjse( BigDecimal _sjse ) {
		sjse = _sjse.doubleValue();
	}

}
