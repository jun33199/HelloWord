/**
 * <p>Title: 北京地税综合管理系统  申报征收-上门模块</p>
 * <p>Copyright: (C) 2003-2004 北京市地方税务局，清华同方软件股份有限公司，版权所有. </p>
 * <p>Company: 清华同方软件股份有限公司</p>
 */

package com.ttsoft.bjtax.smsb.sbzl.qysdsnbnew.jbxxb.processor;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;

import com.syax.creports.Constants;
import com.syax.creports.bo.qysds.Jbxx;
import com.syax.creports.bo.qysds.QysdsReportsDeclare;
import com.syax.creports.bo.qysds.QysdsReportsTableDeclare;
import com.syax.creports.persistent.AppAccessFactory;
import com.syax.creports.persistent.access.IAppAccess;
import com.ttsoft.bjtax.dj.model.SWDJJBSJ;
import com.ttsoft.bjtax.sfgl.common.db.util.SfDBAccess;
import com.ttsoft.bjtax.sfgl.common.db.util.SfDBResource;
import com.ttsoft.bjtax.sfgl.common.model.QysdsSet;
import com.ttsoft.bjtax.sfgl.common.util.Debug;
import com.ttsoft.bjtax.sfgl.common.util.SfDateUtil;
import com.ttsoft.bjtax.sfgl.common.util.SfTimeUtil;
import com.ttsoft.bjtax.sfgl.proxy.ServiceProxy;
import com.ttsoft.bjtax.shenbao.model.domain.Jm;
import com.ttsoft.bjtax.smsb.constant.CodeConstant;
import com.ttsoft.bjtax.smsb.sbzl.qysdsnbnew.base.QysdsNewForm;
import com.ttsoft.bjtax.smsb.sbzl.qysdsnbnew.jbxxb.web.JbxxbForm;
import com.ttsoft.bjtax.smsb.util.InterfaceDj;
import com.ttsoft.bjtax.smsb.util.QysdsNewUtil;
import com.ttsoft.bjtax.smsb.util.SBStringUtils;
import com.ttsoft.bjtax.smsb.util.Skssrq;
import com.ttsoft.bjtax.smsb.util.TinyTools;
import com.ttsoft.common.model.UserData;
import com.ttsoft.framework.exception.ApplicationException;
import com.ttsoft.framework.exception.BaseException;
import com.ttsoft.framework.exception.ExceptionUtil;
import com.ttsoft.framework.processor.Processor;
import com.ttsoft.framework.util.DateUtil;
import com.ttsoft.framework.util.VOPackage;

/**
 * <p>
 * Title: 北京地税综合管理系统 申报征收-上门模块
 * </p>
 * <p>
 * Description:企业所得税年报
 * </p>
 * 
 * @author Shi Yanfeng
 * @version 1.1
 */

public class JbxxbProcessor implements Processor {
	// /**
	// * 企业所得税税率
	// */
	// private final String QYSDS_SL = "0.33";
	//
	// /**
	// * 企业所得税税种
	// */
	// private final String QYSDS_SZ = "30";

	/**
	 * 实现Processor接口
	 * 
	 * @param vo
	 *            业务参数
	 * @return Object VOPackage型数据
	 * @throws BaseException
	 *             业务异常 1 当传过来的操作类型不对时抛出 2 当调用的业务方法抛出业务异常时向上传递抛出
	 *             其他异常抛出由EJB的process方法处理。
	 */

	public Object process(VOPackage vo) throws BaseException {

		Object result = null;
		if (vo == null) {
			throw new NullPointerException();
		}

		switch (vo.getAction()) {
		case CodeConstant.SMSB_SHOWACTION:
			result = doShow(vo);
			break;
		case CodeConstant.SMSB_QUERYACTION:
			result = doQuery(vo);
			break;
		case CodeConstant.SMSB_SAVEACTION:
			result = doSave(vo);
			break;
		// case CodeConstant.SMSB_DELETEACTION:
		// result = doDelete(vo);
		// break;
		default:
			throw new ApplicationException("用户执行了系统不支持的方法或功能.");
		}

		return result;
	}

	/**
	 * doShow初始化对象页面信息要素
	 * 
	 * @param vo
	 *            业务参数
	 * @return 数据对象[如果不是null(即Action不需要返回值)，如果需要返回值，必须是ActionForm]：
	 * @throws BaseException
	 *             当其他情况都会抛出异常信息
	 */

	private Object doShow(VOPackage vo) throws BaseException {

		JbxxbForm jbxxbForm = (JbxxbForm) vo.getData();

		// 初始化FORM：设置申报日期、申报期间
		initForm(jbxxbForm);

		UserData ud = (UserData) vo.getUserData();

		jbxxbForm.setCjr(ud.yhid);
		jbxxbForm.setLrr(ud.yhid);

		return jbxxbForm;
	}

	/**
	 * doQuery 用于返回页面索要查询的详尽信息
	 * 
	 * @param vo
	 *            业务参数
	 * @return 数据对象[如果不是null(即Action不需要返回值)，如果需要返回值，必须是ActionForm]：
	 * @throws BaseException
	 *             当其他情况都会抛出异常信息
	 * 
	 */

	private Object doQuery(VOPackage vo) throws BaseException {

		JbxxbForm jbxxbForm = (JbxxbForm) vo.getData();
		jbxxbForm.setNsrmc(""); // 纳税人名称
		jbxxbForm.setLxdh(""); // 注册地址联系电话

		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			conn = SfDBResource.getConnection();

			UserData ud = (UserData) vo.getUserData();
			SWDJJBSJ djsj = null;
			try {
				// 获得企业登记基本信息

				djsj = InterfaceDj.getJBSJ_New(jbxxbForm.getJsjdm(), ud);

			} catch (Exception ex1) {
				throw ExceptionUtil.getBaseException(ex1);
			}
			jbxxbForm.setNsrsbh(djsj.getSwdjzh()); // 纳税人识别号
			jbxxbForm.setNsrmc(djsj.getNsrmc()); // 纳税人名称
			/**
			 * 页面的为申报年度，需要转换为税款年度，为申报年度的前一年
			 * 
			 * @todo 页面的为税款年度
			 */
			// Map dateMap = new HashMap();
			// dateMap = getSbrl(jbxxbForm.getSbnd() + "0601");
			// 获得当前数据库时间
			Timestamp ret = TinyTools.getDBTimestamp(conn);
			// 获得当前数据库时间的年度
			String sbnd = String.valueOf(TinyTools.getYear(ret));
			System.out.println("数据库时间的申报年度：" + sbnd);
			jbxxbForm.setSbnd(sbnd);

			// jbxxbForm.setSknd(dateMap.get("ksrq")
			// .toString().substring(0, 4));// 年度，页面录入年度的前一年

			jbxxbForm.setSsjjlxdm(djsj.getDjzclxdm()); // 所属经济类型-登记注册类型代码
			jbxxbForm.setSsjjlxmc(djsj.getDjzclxmc());// 所属经济类型-登记注册类型名称
			jbxxbForm.setLxdh(djsj.getZcdzlxdh()); // 注册地址联系电话
			jbxxbForm.setJydz(djsj.getJydz());// 经营地址
			jbxxbForm.setSshydm(djsj.getGjbzhydm());// 所属行业代码
			jbxxbForm.setSshymc(djsj.getGjbzhymc());// 所属行业代码

			jbxxbForm.setSwjgzzjgdm(djsj.getSwjgzzjgdm()); // 税务机关组织机构代码
			jbxxbForm.setSwjgzzjgmc(djsj.getSwjgzzjgmc()); // 税务机关组织机构名称

			jbxxbForm.setLrr(ud.getYhid());// 录入人
			jbxxbForm.setCjr(ud.getYhid());// 创建人

			// 设置税款所属期
			jbxxbForm.setSkssksrq(jbxxbForm.getSknd() + "0101");
			jbxxbForm.setSkssjsrq(jbxxbForm.getSknd() + "1231");

			java.util.Date time = SfDateUtil.getDate(jbxxbForm.getSbnd()
					+ "0601");// 匹配税费接口的rq参数，无意义
			// 申报日期

			// 调用税费接口获得企业的征收方式
			ServiceProxy proxy = new ServiceProxy();
			System.out.println("税费入口参数，计算机代码=" + jbxxbForm.getJsjdm());
			System.out.println("税费入口参数，申报日期=" + time);
			System.out.println("税费入口参数，税款所属开始日期="
					+ SfDateUtil.getDate(jbxxbForm.getSkssksrq()));
			System.out.println("税费入口参数，税款所属结束日期="
					+ SfDateUtil.getDate(jbxxbForm.getSkssjsrq()));

			QysdsSet sdsInfo = proxy.getQysdsInfo(jbxxbForm.getJsjdm(), time,
					SfDateUtil.getDate(jbxxbForm.getSkssksrq()), SfDateUtil
							.getDate(jbxxbForm.getSkssjsrq()),
					CodeConstant.SFGL_QYSDS_BBFS_NB);
			// 判断征收方式
			if (sdsInfo.getZsfs() != null) {

				System.out.println(jbxxbForm.getJsjdm() + "企业征收方式不为空 :"
						+ sdsInfo.getZsfs().getZsfsdm());

				jbxxbForm.setZsfsdm(sdsInfo.getZsfs().getZsfsdm()); // 征收方式代码

				jbxxbForm.setZsfsmc(sdsInfo.getZsfs().getZsfsmc()); // 征收方式名称

				// modified by hazhengze 20051227 End
				if (jbxxbForm.getZsfsdm().equals(CodeConstant.ZSFSDM_CYLZS)) {

					throw new ApplicationException("该纳税人为纯益率方式！不需要填报纳税人基本信息表!");

				} else if (jbxxbForm.getZsfsdm().equals(
						CodeConstant.ZSFSDM_DEZS)) { // 定额征收

					throw new ApplicationException("该纳税人为定额征收方式！不需要填报纳税人基本信息表!");
				} else if (jbxxbForm.getZsfsdm().equals(
						CodeConstant.ZSFSDM_CZZS)) { // 查账征收

				}
			} else {
				// 20070208征收方式如果取出为空则认为是查账征收企业的。
				// throw new ApplicationException(
				// "该纳税人没有核定企业所得税征收方式，请核定后继续填写基本信息表!");

				jbxxbForm.setZsfsdm(CodeConstant.ZSFSDM_CZZS);
				jbxxbForm.setZsfsmc(CodeConstant.ZSFSNAME_CZZS);
			}

			jbxxbForm.setCwkjzddm(CodeConstant.CWKJZD01);// 会计制度代码
			jbxxbForm.setCwkjzddm_old(CodeConstant.CWKJZD01);// 会计制度代码修改前

			jbxxbForm.setJmlxdm(CodeConstant.JMLXNO);// 减免类型代码
			jbxxbForm.setJmlxdm_old(CodeConstant.JMLXNO);// 减免类型代码修改前

			// 工资管理形式
			jbxxbForm.setGzglxsdm(CodeConstant.GZGLXS01);
			// 工资管理形式
			jbxxbForm.setGzglxsdm_old(CodeConstant.GZGLXS01);

			/** **********************************已经录入过的页面信息start************************************************************** */

			StringBuffer bf = new StringBuffer();
			// select
			bf
					.append(" select ")
					// 查询字段
					.append(" NSRJSJDM,NSRSBH,NSRMC,ND,SBND,SSJJLX, ")
					// 子查询-根据登记注册类型代码表查询登记注册类型名称
					// 所属经济类型-登记注册类型
					.append(
							" (SELECT DJZCLXMC FROM DMDB.DJ_DM_DJZCLX T2 WHERE T2.DJZCLXDM=T1.SSJJLX) AS SSJJLXMC, ")
					.append(" LXDH,JYDZ,SSHY, ")
					// 子查询-根据所属行业代码表查询所属行业名称
					.append(
							" (SELECT GJBZHYMC FROM DMDB.GY_DM_GJBZHY T3 WHERE T3.GJBZHYDM=T1.SSHY) AS SSHYMC,")
					.append(" ZSFS, ")
					// 子查询-根据企业所得税征收方式代码表查询企业所得税征收方式名称
					.append(
							" (SELECT ZSFSMC FROM DMDB.SF_DM_ZSFS T4 WHERE T4.ZSFSDM=T1.ZSFS) AS ZSFSMC,")
					.append("CKZD,GZGLXS, ")
					.append(" JMLX,SWJGZZJGDM, ")
					// 子查询-根据税务机关组织代码查询税务机关组织机构名称
					.append(
							" (SELECT SWJGZZJGMC FROM DMDB.GY_DM_SWJGZZJG T5 WHERE T5.SWJGZZJGDM=T1.SWJGZZJGDM) AS SWJGZZJGMC, ")
					.append(" CJR,CJSJ,LRR,LRSJ,XTJB,BBMSF ")
					// from
					.append(" from sbdb.sb_jl_qysds_nsrjbxxb t1 ")
					// where
					.append(" where  t1.nsrjsjdm = ? and t1.nd = ? ");

			System.out.println("企业所得税-基本信息查询SQL");
			System.out.println(bf.toString());

			ps = conn.prepareStatement(bf.toString());
			System.out.println("1-" + jbxxbForm.getJsjdm());
			System.out.println("2-" + jbxxbForm.getSknd());
			ps.setString(1, jbxxbForm.getJsjdm());
			ps.setString(2, jbxxbForm.getSknd());
			rs = ps.executeQuery();

			if (rs.next()) {

				// 纳税人计算机代码
				jbxxbForm.setJsjdm(rs.getString("NSRJSJDM"));
				// 纳税人识别号－税务登记证号
				// jbxxbForm.setNsrsbh(rs.getString("NSRSBH"));
				// 纳税人名称
				// jbxxbForm.setNsrmc(rs.getString("NSRMC"));
				// 税款年度
				jbxxbForm.setSknd(rs.getString("ND"));
				// 申报年度
				jbxxbForm.setSbnd(rs.getString("SBND"));
				// 所属经济类型
				// jbxxbForm.setSsjjlxdm(rs.getString("SSJJLX"));
				// 所属经济类型
				// jbxxbForm.setSsjjlxmc(rs.getString("SSJJLXMC"));
				// 联系电话
				jbxxbForm.setLxdh(rs.getString("LXDH"));
				// 经营地址
				// jbxxbForm.setJydz(rs.getString("JYDZ"));
				// 所属行业
				// jbxxbForm.setSshydm(rs.getString("SSHY"));
				// 所属行业
				// jbxxbForm.setSshymc(rs.getString("SSHYMC"));
				// 财会制度 00:一类01:二类02:三类
				jbxxbForm.setCwkjzddm(rs.getString("CKZD"));
				// 会计制度代码修改前
				jbxxbForm.setCwkjzddm_old(rs.getString("CKZD"));
				// 税务机关组织机构代码
				// jbxxbForm.setSwjgzzjgdm(rs.getString("SWJGZZJGDM"));
				// 税务机关组织机构代码
				// jbxxbForm.setSwjgzzjgmc(rs.getString("SWJGZZJGMC"));

				// 企业所得税征收方式
				// jbxxbForm.setZsfsdm(rs.getString("ZSFS"));
				// 企业所得税征收方式
				// jbxxbForm.setZsfsmc(rs.getString("ZSFSMC"));

				// 减免类型
				jbxxbForm.setJmlxdm(rs.getString("JMLX"));
				// 减免类型
				jbxxbForm.setJmlxdm_old(rs.getString("JMLX"));

				// 工资管理形式
				jbxxbForm.setGzglxsdm(rs.getString("GZGLXS"));
				// 工资管理形式
				jbxxbForm.setGzglxsdm_old(rs.getString("GZGLXS"));

				jbxxbForm.setCjr(rs.getString("CJR"));
				jbxxbForm.setCjrq(SBStringUtils.getStrFromDate(rs
						.getTimestamp("CJSJ")));
				jbxxbForm.setCjr(rs.getString("LRR"));
				jbxxbForm.setLrrq(SBStringUtils.getStrFromDate(rs
						.getTimestamp("LRSJ")));
				jbxxbForm.setXtjb(rs.getString("XTJB"));
				jbxxbForm.setBbmsf(rs.getString("BBMSF"));

			}

			/** ***********************************已经录入过end*************************************************************** */

			if (rs != null) {
				rs.close();
			}
			if (ps != null) {
				ps.close();
			}

		} catch (Exception ex) {
			// 抛出异常
			ex.printStackTrace();
			throw ExceptionUtil.getBaseException(ex);
		} finally {

			SfDBResource.freeConnection(conn);
		}
		System.out.println(jbxxbForm.getJsjdm() + "企业征收方式为"
				+ jbxxbForm.getZsfsdm());

		return jbxxbForm;
	}

	/**
	 * doSave 用于存储页面提交的详尽处理信息
	 * 
	 * @param vo
	 *            业务参数
	 * @return 数据对象[如果不是null(即Action不需要返回值)，如果需要返回值，必须是ActionForm]
	 * @throws BaseException
	 *             当其他情况都会抛出异常信息
	 */

	private Object doSave(VOPackage vo) throws BaseException {

		JbxxbForm jbxxbForm = (JbxxbForm) vo.getData();

		Connection conn = null;
		SfDBAccess dbAgent = null;
		PreparedStatement ps = null;
		Statement st = null;
		ResultSet rs = null;
		// sql buffer
		StringBuffer bf = new StringBuffer();

		// 减免是否匹配
		boolean jm_type = false;

		/***********************************************************************
		 * 判断减免的类型在税费核定的减免类型中，不在则throw new
		 * ApplicationException("该纳税人不享受此减免类型!");
		 * 
		 * 
		 * 保存之前根据 修改前的值和修改后的值 判断 会计制度、工资管理形式、减免类型是否修改过，有则对已有的申报表数据进行删除
		 * 
		 * 保存成功后 将会计制度、工资管理形式、减免类型对应的form中的
		 * 
		 * cwkjzddm cwkjzddm_old
		 * 
		 * gzglxsdm gzglxsdm_old
		 * 
		 * jmlxdm jmlxdm_old
		 * 
		 * 设置为一致
		 * 
		 * 返回
		 * 
		 * 
		 **********************************************************************/

		try {
			conn = SfDBResource.getConnection();
			st = conn.createStatement();
			dbAgent = new SfDBAccess(conn);
			UserData ud = (UserData) vo.getUserData();

			// 调用税费接口
			ServiceProxy proxy = new ServiceProxy();

			// 获取报表处理数据库接口
			IAppAccess iApp = AppAccessFactory.getAInstance(conn,
					AppAccessFactory.ACCESS_MODEL_APP_QYSDS);

			// 设置版本号
			jbxxbForm.setVersion(iApp
					.getCurrentVersion(Constants.CREPORTS_APPID_QYSDS));

			jbxxbForm.setLrrq(SBStringUtils.getStrFromDate(TinyTools
					.getDBTimestamp(conn)));
			System.out.println("CJRQ=" + jbxxbForm.getCjrq());
			if (jbxxbForm.getCjrq() == null || "".equals(jbxxbForm.getCjrq())) {
				jbxxbForm.setCjrq(jbxxbForm.getLrrq());
			}

			// 更新税费表征收方式认定表中的纳税人状态
			try {
				String sql = "update sfdb.sf_jl_qysdszsfs_his set nsrzt='10',lrrq=sysdate where jsjdm='"
						+ jbxxbForm.getJsjdm() + "'";
				dbAgent.updateSQL(sql);
			} catch (BaseException ex1) {
				// 抛出异常
				ex1.printStackTrace();
				new ApplicationException("数据库更新记录失败！" + jbxxbForm.getJsjdm()
						+ ":" + ex1.getMessage());
			}

			/**
			 * TODO 判断减免的类型在税费核定的减免类型中，不在则throw new
			 * ApplicationException("该纳税人不享受此减免类型!");
			 * 
			 * 如果有减免类型同时获得申请审批表号
			 * 
			 * 1、如果没有减免类型，不做判断,申请审批表号只为默认值 "本单位无减免审批事项"
			 * 2、如果为其他减免类型，则只判断是否有减免，不分类型，同时获得第一条申请审批表号
			 * 3、如果为“高新技术企业”减免类型的判断条件，只判断是否有审批件，不判断时间上是否过期
			 * 4、如果为指定的减免类型则判断是否享受该减免类型，同时获得申请审批表号
			 * 
			 */
			String sqspbh = "本单位无减免审批事项";

			if (("".equals(jbxxbForm.getJmlxdm()))
					|| (CodeConstant.JMLXNO.equals(jbxxbForm.getJmlxdm()))) {

				jbxxbForm.setSqspbh(sqspbh);

			} else if ((CodeConstant.JMLXOTHER.equals(jbxxbForm.getJmlxdm()))) {

				bf.delete(0, bf.length());

				bf
						.append(
								" select t1.sqspbh as sqspbh,t1.jmslbdm as JMSLBDM from spdb.sp_jl_ybnsdwjmsp t1,spdb.sp_jl_ybnsdwjmspmx t2 ")
						.append(" where t1.jsjdm= ").append(
								SBStringUtils.getSQLStr(jbxxbForm.getJsjdm()))
						.append(" and t2.sqspbh=t1.sqspbh ").append(
								" and t2.jmsqsrq<= ").append(
								SBStringUtils.getSQLDate2(jbxxbForm
										.getSkssjsrq())).append(
								" and t2.jmszzrq>= ").append(
								SBStringUtils.getSQLDate2(jbxxbForm
										.getSkssjsrq())).append(
								" and t2.szsmdm='30' ").append(
								" order by t1.cjrq desc ");

				System.out.println("企业所得税-查询减免类型，是否有减免资格SQL");
				System.out.println(bf.toString());
				st = conn.createStatement();
				rs = st.executeQuery(bf.toString());

				if (rs.next()) {
					jm_type = true;
					sqspbh = rs.getString("sqspbh");
				}

				System.out.println("申请审批表号:" + sqspbh);

				if (!jm_type) {
					jm_type = false;
				}
				// if (jm_type) {
				jbxxbForm.setSqspbh(sqspbh); // 申请审批表号
				// }

			} else if ((CodeConstant.JMLX9010.equals(jbxxbForm.getJmlxdm()))) {

				bf.delete(0, bf.length());

				bf
						.append(
								" select t1.sqspbh as sqspbh,t1.jmslbdm as JMSLBDM from spdb.sp_jl_ybnsdwjmsp t1,spdb.sp_jl_ybnsdwjmspmx t2 ")
						.append(" where t1.jsjdm= ").append(
								SBStringUtils.getSQLStr(jbxxbForm.getJsjdm()))
						.append(" and t2.sqspbh=t1.sqspbh ").append(
								" and t2.szsmdm='30' ").append(
								" and  t1.jmslbdm= ").append(
								SBStringUtils.getSQLStr(jbxxbForm.getJmlxdm()))
						.append(" order by t1.cjrq desc ");

				System.out.println("企业所得税-查询减免类型，是否有减免资格SQL");
				System.out.println(bf.toString());
				st = conn.createStatement();
				rs = st.executeQuery(bf.toString());

				if (rs.next()) {
					jm_type = true;
					sqspbh = rs.getString("sqspbh");
				}

				System.out.println("申请审批表号:" + sqspbh);

				jbxxbForm.setSqspbh(sqspbh); // 申请审批表号

				// 2007-04-16 如果高新技术企业做了认定则，该户也允许有高新技术企业减免

				java.util.Date time = SfDateUtil.getDate(jbxxbForm.getSbnd()
						+ "0601");// 匹配税费接口的rq参数，无意义

				System.out.println("税费入口参数，计算机代码=" + jbxxbForm.getJsjdm());
				System.out.println("税费入口参数，申报日期=" + time);
				System.out.println("税费入口参数，税款所属开始日期="
						+ SfDateUtil.getDate(jbxxbForm.getSkssksrq()));
				System.out.println("税费入口参数，税款所属结束日期="
						+ SfDateUtil.getDate(jbxxbForm.getSkssjsrq()));

				QysdsSet sdsInfo = proxy.getQysdsInfo(jbxxbForm.getJsjdm(),
						time, SfDateUtil.getDate(jbxxbForm.getSkssksrq()),
						SfDateUtil.getDate(jbxxbForm.getSkssjsrq()),
						CodeConstant.SFGL_QYSDS_BBFS_NB);

				System.out.println("取得的税费接口信息sdsInfo="
						+ sdsInfo);
				
				// 判断征收方式
				if (sdsInfo != null) {
					/* 高新技术企业认定日期 */
					Date gxqyrdrq = sdsInfo.getGxjsqy();

					System.out.println("取得的税费接口信息gxqyrdrq="
							+ gxqyrdrq);
					
					if (gxqyrdrq != null) {

						jm_type = true;

					}
				}

				// 2007-04-16 如果高新技术企业做了认定则，该户也允许有高新技术企业减免

				if (!jm_type) {
					jm_type = false;
				}

				if (!jm_type) {
					throw new ApplicationException(
							"选择的减免类型与税费信息中核定的减免类型不一致，该纳税人不享受此减免类型!！");
				}

			} else {

				bf.delete(0, bf.length());

				bf
						.append(
								" select t1.sqspbh as sqspbh, t1.jmslbdm as jmslbdm from spdb.sp_jl_ybnsdwjmsp t1,spdb.sp_jl_ybnsdwjmspmx t2 ")
						.append(" where t1.jsjdm= ").append(
								SBStringUtils.getSQLStr(jbxxbForm.getJsjdm()))
						.append(" and t2.sqspbh=t1.sqspbh ").append(
								" and t2.jmsqsrq<= ").append(
								SBStringUtils.getSQLDate2(jbxxbForm
										.getSkssjsrq())).append(
								" and t2.jmszzrq>= ").append(
								SBStringUtils.getSQLDate2(jbxxbForm
										.getSkssjsrq())).append(
								" and t2.szsmdm='30' ").append(
								" and  t1.jmslbdm= ").append(
								SBStringUtils.getSQLStr(jbxxbForm.getJmlxdm()))
						.append(" order by t1.cjrq desc ");

				System.out.println("企业所得税-基本信息插入历史数据SQL");
				System.out.println(bf.toString());

				rs = st.executeQuery(bf.toString());

				if (rs.next()) {
					jm_type = true;
					sqspbh = rs.getString("sqspbh");
				}

				System.out.println("申请审批表号:" + sqspbh);

				if (!jm_type) {
					jm_type = false;
				}

				// if (jm_type) {
				jbxxbForm.setSqspbh(sqspbh); // 申请审批表号
				// }

				if (!jm_type) {
					throw new ApplicationException(
							"选择的减免类型与税费信息中核定的减免类型不一致，该纳税人不享受此减免类型!！");
				}

			}

			/**
			 * 插入历史数据
			 */

			bf.delete(0, bf.length());

			bf
					.append(" insert into sbdb.sb_jl_qysds_nsrjbxxb_his ")
					.append(
							" (XH,NSRJSJDM,NSRSBH,NSRMC,VERSION,ND,SBND,SQSPBH,SSJJLX,SSJJLXMC,LXDH,JYDZ,SSHY,SSHYMC,ZSFS,ZSFSMC,DL,CYL,DE,CKZD,CKZDMC,GZGLXS,GZGLXSMC,JMLX,JMLXMC,JWSDDK,JWSDDKMC,SWJGZZJGDM,SWJGZZJGMC,CJR,CJSJ,LRR,LRSJ,XTJB,BBMSF,SKSSSQQ,SKSSSQZ,REMARK1,REMARK2) ")
					.append(" (select ")
					.append(TinyTools.getXh(jbxxbForm.getJsjdm()))
					.append(",")
					.append(
							" NSRJSJDM,NSRSBH,NSRMC,VERSION,ND,SBND,SQSPBH,SSJJLX,SSJJLXMC,LXDH,JYDZ,SSHY,SSHYMC,ZSFS,ZSFSMC,DL,CYL,DE,CKZD,CKZDMC,GZGLXS,GZGLXSMC,JMLX,JMLXMC,JWSDDK,JWSDDKMC,SWJGZZJGDM,SWJGZZJGMC,CJR,CJSJ,LRR,LRSJ,XTJB,BBMSF,SKSSSQQ,SKSSSQZ,REMARK1,REMARK2 ")
					.append(" from sbdb.sb_jl_qysds_nsrjbxxb t1 ").append(
							" where  t1.nsrjsjdm = ").append(
							SBStringUtils.getSQLStr(jbxxbForm.getJsjdm()))
					.append(" and t1.nd = ").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSknd()))
					.append(" ) ");

			System.out.println("企业所得税-基本信息插入历史数据SQL");
			System.out.println(bf.toString());

			st.execute(bf.toString());

			/**
			 * 删除数据
			 */

			bf.delete(0, bf.length());

			bf.append(" delete ")

					// from
					.append(" from sbdb.sb_jl_qysds_nsrjbxxb t1 ")
					// where
					.append(" where  t1.nsrjsjdm = ").append(
							SBStringUtils.getSQLStr(jbxxbForm.getJsjdm()))
					.append(" and t1.nd = ").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSknd()));

			System.out.println("企业所得税-基本信息删除SQL");
			System.out.println(bf.toString());

			st.execute(bf.toString());

			// 补充form中的工资管理形式的名称 财务会计制度的名称及相对应的报表描述符
			if (CodeConstant.CWKJZD01.equals(jbxxbForm.getCwkjzddm())) {

				jbxxbForm.setCwkjzdmc(CodeConstant.CWKJZDMC01);

				// 补充form中的工资管理形式的名称
				if (CodeConstant.GZGLXS01.equals(jbxxbForm.getGzglxsdm())) {

					jbxxbForm.setGzglxsmc(CodeConstant.GZGLXSMC01);
					jbxxbForm.setBbmsf(CodeConstant.BBMSF10);

				} else if (CodeConstant.GZGLXS03
						.equals(jbxxbForm.getGzglxsdm())) {

					jbxxbForm.setGzglxsmc(CodeConstant.GZGLXSMC03);
					jbxxbForm.setBbmsf(CodeConstant.BBMSF11);

				}

			} else if (CodeConstant.CWKJZD02.equals(jbxxbForm.getCwkjzddm())) {

				jbxxbForm.setCwkjzdmc(CodeConstant.CWKJZDMC02);

				// 补充form中的工资管理形式的名称
				if (CodeConstant.GZGLXS01.equals(jbxxbForm.getGzglxsdm())) {

					jbxxbForm.setGzglxsmc(CodeConstant.GZGLXSMC01);
					jbxxbForm.setBbmsf(CodeConstant.BBMSF20);

				} else if (CodeConstant.GZGLXS03
						.equals(jbxxbForm.getGzglxsdm())) {

					jbxxbForm.setGzglxsmc(CodeConstant.GZGLXSMC03);
					jbxxbForm.setBbmsf(CodeConstant.BBMSF21);

				}

			} else if (CodeConstant.CWKJZD03.equals(jbxxbForm.getCwkjzddm())) {

				jbxxbForm.setCwkjzdmc(CodeConstant.CWKJZDMC03);

				// 补充form中的工资管理形式的名称
				if (CodeConstant.GZGLXS01.equals(jbxxbForm.getGzglxsdm())) {

					jbxxbForm.setGzglxsmc(CodeConstant.GZGLXSMC01);
					jbxxbForm.setBbmsf(CodeConstant.BBMSF30);

				} else if (CodeConstant.GZGLXS03
						.equals(jbxxbForm.getGzglxsdm())) {

					jbxxbForm.setGzglxsmc(CodeConstant.GZGLXSMC03);
					jbxxbForm.setBbmsf(CodeConstant.BBMSF31);

				}

			}

			// 补充form中的减免企业所得税的类型的名称
			if ("".equals(jbxxbForm.getJmlxdm())
					|| CodeConstant.JMLXNO.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMCNO);

			} else if (CodeConstant.JMLXOTHER.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMCOTHER);

			} else if (CodeConstant.JMLX9010.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMC9010);

			} else if (CodeConstant.JMLX9020.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMC9020);

			} else if (CodeConstant.JMLX9030.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMC9030);

			} else if (CodeConstant.JMLX9090.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMC9090);

			} else if (CodeConstant.JMLX9070.equals(jbxxbForm.getJmlxdm())) {

				jbxxbForm.setJmlxmc(CodeConstant.JMLXMC9070);

			}

			/**
			 * 插入修改的数据
			 */

			bf.delete(0, bf.length());

			bf
					.append(" insert into sbdb.sb_jl_qysds_nsrjbxxb ")
					.append(
							" (NSRJSJDM,NSRSBH,NSRMC,VERSION,ND,SBND,SQSPBH,SSJJLX,SSJJLXMC,LXDH,JYDZ,SSHY,SSHYMC,ZSFS,ZSFSMC,CKZD,CKZDMC,GZGLXS,GZGLXSMC,JMLX,JMLXMC,JWSDDK,JWSDDKMC,SWJGZZJGDM,SWJGZZJGMC,CJR,CJSJ,LRR,LRSJ,XTJB,BBMSF,SKSSSQQ,SKSSSQZ,REMARK1,REMARK2) ")
					// 计算机代码
					.append(" values(").append(
							SBStringUtils.getSQLStr(jbxxbForm.getJsjdm()))
					// 纳税人识别号
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getNsrsbh()))
					// 纳税人名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getNsrmc()))
					// 版本号
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getVersion()))
					// 税款年度
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSknd()))
					// 申报年度
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSbnd()))
					// 申请审批编号
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSqspbh()))
					// 所属经济类型代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSsjjlxdm()))
					// 所属经济类型名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSsjjlxmc()))
					// 联系电话
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getLxdh()))
					// 经营地址
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getJydz()))
					// 所属行业代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSshydm()))
					// 所属行业名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSshymc()))
					// 征收方式代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getZsfsdm()))
					// 征收方式代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getZsfsmc()))
					// 财会制度代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getCwkjzddm()))
					// 财会制度名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getCwkjzdmc()))
					// 工资管理形式代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getGzglxsdm()))
					// 工资管理形式名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getGzglxsmc()))
					// 减免类型代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getJmlxdm()))
					// 减免类型名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getJmlxmc()))
					// 境外所得已纳税款抵扣方法
					.append(",").append("''")
					// 境外所得已纳税款抵扣方法名称
					.append(",").append("''")
					// 税务机关组织机构代码
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSwjgzzjgdm()))
					// 税务机关组织机构名称
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getSwjgzzjgmc()))
					// 创建人
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getCjr()))
					// 创建时间
					.append(",").append(
							SBStringUtils.getSQLDate2(jbxxbForm.getCjrq()))
					// 录入人
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getLrr()))
					// 录入时间
					.append(",").append(
							SBStringUtils.getSQLDate2(jbxxbForm.getLrrq()))
					// 系统级别
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getXtjb()))
					// 报表描述符
					.append(",").append(
							SBStringUtils.getSQLStr(jbxxbForm.getBbmsf()))
					// 税款所属时期起
					.append(",").append(
							SBStringUtils.getSQLDate2(jbxxbForm.getSkssksrq()))
					// 税款所属时期止
					.append(",").append(
							SBStringUtils.getSQLDate2(jbxxbForm.getSkssjsrq()))
					// 备注1
					.append(",").append("''")
					// 备注2
					.append(",").append("''")

					.append(") ");

			System.out.println("企业所得税-基本信息插入SQL\n");
			System.out.println(bf.toString());

			st.execute(bf.toString());

			/**
			 * TODO 如果会计制度重新修改了，需要删除对应的申报表
			 */
			if (!(jbxxbForm.getCwkjzddm().equals(jbxxbForm.getCwkjzddm_old()))) {

				QysdsReportsDeclare qd = new QysdsReportsDeclare();
				qd = this.setQysdsReport(jbxxbForm);

				// 企业所得税报表内单表申明对象
				QysdsReportsTableDeclare table = new QysdsReportsTableDeclare();

				// 原选择为企业（小企业）会计制度
				if (CodeConstant.CWKJZD01.equals(jbxxbForm.getCwkjzddm_old())) {
					// 清除附表一1
					table.setTableId(CodeConstant.TABLE_ID_SRBYBQY);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 清除附表二1
					table.setTableId(CodeConstant.TABLE_ID_CBMXBYBQY);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 如果由企业（小企业）会计制度转为金融企业清除附表十四1
					if (CodeConstant.CWKJZD02.equals(jbxxbForm.getCwkjzddm())) {

						table.setTableId(CodeConstant.TABLE_ID_HZSSMXB);
						table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
						// set table
						qd.getTableContentList().put(table.getTableId(), table);
						// 调用delete方法进行数据删除
						iApp.deleteSingleTable(qd);
					}
				}

				// 原选择为金融企业会计制度
				if (CodeConstant.CWKJZD02.equals(jbxxbForm.getCwkjzddm_old())) {
					// 清除附表一2
					table.setTableId(CodeConstant.TABLE_ID_SRBJRQY);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 清除附表二2
					table.setTableId(CodeConstant.TABLE_ID_CBMXBJRQY);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 清除附表十四2
					table.setTableId(CodeConstant.TABLE_ID_DZZBJTMXB);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 清除附表十四3
					table.setTableId(CodeConstant.TABLE_ID_BXZBJ);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);
				}

				// 原选择为事业单位、社会团体、民办非企业单位会计制度
				if (CodeConstant.CWKJZD03.equals(jbxxbForm.getCwkjzddm_old())) {
					// 清除附表一3
					table.setTableId(CodeConstant.TABLE_ID_SRBSYDW);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 清除附表二3
					table.setTableId(CodeConstant.TABLE_ID_CBMXBSYDW);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

					// 如果由事业单位、社会团体、民办非企业单位会计制度转为金融企业清除附表十四1
					if (CodeConstant.CWKJZD02.equals(jbxxbForm.getCwkjzddm())) {
						// 清除附表十四1
						table.setTableId(CodeConstant.TABLE_ID_HZSSMXB);
						table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
						// set table
						qd.getTableContentList().put(table.getTableId(), table);
						// 调用delete方法进行数据删除
						iApp.deleteSingleTable(qd);
					}

				}

			}

			/**
			 * TODO 如果工资管理形式重新修改了，需要删除对应的申报表
			 */
			if (!(jbxxbForm.getGzglxsdm().equals(jbxxbForm.getGzglxsdm_old()))) {

				QysdsReportsDeclare qd = new QysdsReportsDeclare();
				qd = this.setQysdsReport(jbxxbForm);
				// 企业所得税报表内单表申明对象
				QysdsReportsTableDeclare table = new QysdsReportsTableDeclare();

				// 原来选择非工效挂钩 (计税工资 全额扣除) 现在选择工效挂钩
				if ((CodeConstant.GZGLXS01.equals(jbxxbForm.getGzglxsdm_old()))
						&& (CodeConstant.GZGLXS03.equals(jbxxbForm
								.getGzglxsdm()))) {
					// 清除非工效的表 附表十二
					table.setTableId(CodeConstant.TABLE_ID_GZXJMXB_FGX);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

				}

				// 原来选择工效挂钩 现在选择非工效挂钩 (计税工资 全额扣除)
				if ((CodeConstant.GZGLXS01.equals(jbxxbForm.getGzglxsdm()))
						&& (CodeConstant.GZGLXS03.equals(jbxxbForm
								.getGzglxsdm_old()))) {
					// 清除工效的表 附表十二
					table.setTableId(CodeConstant.TABLE_ID_TABLE_ID_GZXJMXB_GX);
					table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
					// set table
					qd.getTableContentList().put(table.getTableId(), table);
					// 调用delete方法进行数据删除
					iApp.deleteSingleTable(qd);

				}

			}

			/**
			 * TODO 如果减免类型重新修改了，需要删除对应的申报表
			 */

			if (!(jbxxbForm.getJmlxdm().equals(jbxxbForm.getJmlxdm_old()))) {

				/**
				 * 清除附表七减免表的数据，减免的数据需要重新录入
				 * 
				 */

				QysdsReportsDeclare qd = new QysdsReportsDeclare();
				qd = this.setQysdsReport(jbxxbForm);
				// 企业所得税报表内单表申明对象
				QysdsReportsTableDeclare table = new QysdsReportsTableDeclare();

				// 清除附表七减免表的数据，减免的数据需要重新录入
				table.setTableId(CodeConstant.TABLE_ID_MSSDMXB);
				table.setTbblx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
				// set table
				qd.getTableContentList().put(table.getTableId(), table);
				// 调用delete方法进行数据删除
				iApp.deleteSingleTable(qd);

			}

			/**
			 * 重新设置原始值
			 */
			jbxxbForm.setCwkjzddm_old(jbxxbForm.getCwkjzddm());
			jbxxbForm.setGzglxsdm_old(jbxxbForm.getGzglxsdm());
			jbxxbForm.setJmlxdm_old(jbxxbForm.getJmlxdm());

			if (rs != null) {
				rs.close();
			}
			if (ps != null) {
				ps.close();
			}

		} catch (Exception ex) {
			// 抛出异常
			ex.printStackTrace();
			throw new ApplicationException(ex.getMessage());
		} finally {
			SfDBResource.freeConnection(conn);
		}

		return jbxxbForm;
	}

	// /**
	// * doDelete 用于删除页面提交的详尽处理信息
	// *
	// * @param vo
	// * 业务参数
	// * @return 数据对象[如果不是null(即Action不需要返回值)，如果需要返回值，必须是ActionForm]
	// * @throws BaseException
	// * 当其他情况都会抛出异常信息
	// */
	//
	// private Object doDelete(VOPackage vo) throws BaseException {
	//
	// JbxxbForm jbxxbForm = (JbxxbForm) vo.getData();
	//
	// Connection conn = null;
	// SfDBAccess dbAgent = null;
	// UserData ud = (UserData) vo.getUserData();
	//
	// try {
	// // conn = SfDBResource.getConnection();
	// // dbAgent = new SfDBAccess(conn);
	// //
	// // jbxxbForm.setNd(getSbnd(jbxxbForm.getSbrq()));
	// //
	// // // 删除已有历史所得税数据
	// // try {
	// // String strWhere = " jsjdm='" + jbxxbForm.getJsjdm() + "'"
	// // + " and qxdm='" + jbxxbForm.getQxdm() + "'" + " and nd='"
	// // + jbxxbForm.getNd() + "'";
	// // // 删除联营、股份数据
	// // dbAgent.delete(strWhere, new Lygf());
	// //
	// // // 删除企业所得税年报数据
	// // dbAgent.delete(strWhere, new Qysdsnb());
	// // // 记录删除日志
	// // TinyTools.makeLog4Qysds(ud, jbxxbForm.getJsjdm(), "企业所得税年报");
	// // } catch (BaseException ex1) {
	// // // 抛出异常
	// // ex1.printStackTrace();
	// // new ApplicationException("数据库删除操作失败！");
	// // }
	// //
	// // // 重新设置初始化数据
	// // initForm(jbxxbForm);
	// // // 清楚已加载数据
	// // jbxxbForm.getDataList().clear();
	// } catch (Exception ex) {
	// // 抛出异常
	// ex.printStackTrace();
	// throw new ApplicationException("数据库删除操作失败！");
	// } finally {
	// SfDBResource.freeConnection(conn);
	// }
	// return jbxxbForm;
	// }

	/**
	 * 初始化
	 * 
	 * @param jbxxbForm
	 *            主表数据
	 * @throws BaseException
	 *             当其他情况都会抛出异常信息
	 */

	private void initForm(JbxxbForm jbxxbForm) throws BaseException {

	}

	// /**
	// * 根据申报日期取得当前前年0101-1231
	// *
	// * @param curSbrq
	// * 申报日期
	// * @return dateMap
	// */
	// public Map getSbrl(String curSbrq) {
	// Timestamp sbrq = SfTimeUtil.getTimestamp(curSbrq);
	// GregorianCalendar calendar = new GregorianCalendar();
	// calendar.setTime(sbrq);
	// calendar.add(calendar.YEAR, -1);
	// int year = calendar.get(calendar.YEAR);
	// String nd = new Integer(year).toString();
	// Timestamp ksrq;
	// Timestamp jsrq;
	// Map retMap = new HashMap();
	// ksrq = new Timestamp(new GregorianCalendar(year, 0, 1).getTime()
	// .getTime());
	// jsrq = new Timestamp(new GregorianCalendar(year, 11, 31).getTime()
	// .getTime());
	//
	// Map dateMap = new HashMap();
	// dateMap.put("ksrq", ksrq);
	// dateMap.put("jsrq", jsrq);
	// return dateMap;
	// }

	/**
	 * 设置报表对象基本信息
	 * 
	 * @param report
	 * @param form
	 */
	public QysdsReportsDeclare setQysdsReport(JbxxbForm form) {

		QysdsReportsDeclare report = new QysdsReportsDeclare();
		/**
		 * 基本信息
		 */
		Jbxx jbxx = new Jbxx();

		/**
		 * 基本信息(JBXX)-计算机代码
		 */
		jbxx.setJsjdm(form.getJsjdm());
		/**
		 * 基本信息(JBXX)-纳税人名称
		 */
		jbxx.setNsrmc(form.getNsrmc());
		/**
		 * 基本信息(JBXX)-所属经济类型
		 */
		jbxx.setSsjjlx(form.getSsjjlxdm());
		/**
		 * 基本信息(JBXX)-联系电话
		 */
		jbxx.setLxdh(form.getLxdh());
		/**
		 * 基本信息(JBXX)-所属行业
		 */
		jbxx.setSshy(form.getSshydm());
		/**
		 * 基本信息(JBXX)-征收方式
		 */
		jbxx.setZsfs(form.getZsfsdm());
		/**
		 * 基本信息(JBXX)-财会制度
		 */
		jbxx.setCkzd(form.getCwkjzddm());
		/**
		 * 基本信息(JBXX)-工资管理形式
		 */
		jbxx.setGzglxs(form.getGzglxsdm());
		/**
		 * 基本信息(JBXX)-减免类型
		 */
		jbxx.setJmlx(form.getJmlxdm());

		report.setJbxx(jbxx);

		/**
		 * 应用编号
		 */
		report.setAppid(Constants.CREPORTS_APPID_QYSDS);
		/**
		 * 版本号
		 */
		report.setVersion("20060101");
		/**
		 * 纳税人计算机代码
		 */
		report.setNsrjsjdm(form.getJsjdm());
		/**
		 * 纳税人名称
		 */
		report.setNsrmc(form.getNsrmc());
		/**
		 * 报表期类型
		 */
		report.setBbqlx(Constants.CREPORTS_IBBQLX_TYPE_YEAR);
		/**
		 * 期号
		 */
		report.setQh("1");
		/**
		 * 税款所属开始日期
		 */
		if (form.getSkssksrq() != null && !form.getSkssksrq().equals("")) {
			report.setSkssksrq(new Date(TinyTools.stringToDate(
					form.getSkssksrq(), "yyyyMMdd").getTime()));
		}
		/**
		 * 税款所属结束日期
		 */
		if (form.getSkssjsrq() != null && !form.getSkssjsrq().equals("")) {
			report.setSkssjsrq(new Date(TinyTools.stringToDate(
					form.getSkssjsrq(), "yyyyMMdd").getTime()));
		}
		/**
		 * 申报日期
		 */
		if (form.getLrrq() != null && !form.getLrrq().equals("")) {
			report.setSbrq(new Date(TinyTools.stringToDate(form.getLrrq(),
					"yyyyMMdd").getTime()));
		}
		/**
		 * 税款年度
		 */
		report.setSknd(form.getSknd());
		/**
		 * 税务机关组织机构代码
		 */
		report.setSwjgzzjgdm(form.getSwjgzzjgdm());
		/**
		 * 区县代码
		 */
		report.setQxdm(form.getSwjgzzjgdm().substring(2, 4));
		/**
		 * 录入人
		 */
		report.setLrr(form.getLrr());
		/**
		 * 录入日期
		 */
		if (form.getLrrq() != null && !form.getLrrq().equals("")) {
			report.setLrrq(new Date(TinyTools.stringToDate(form.getLrrq(),
					"yyyyMMdd").getTime()));
		}
		/**
		 * 创建人
		 */
		report.setCjr(form.getLrr());
		/**
		 * 创建日期
		 */
		if (form.getCjrq() != null && !form.getCjrq().equals("")) {
			report.setCjrq(new Date(TinyTools.stringToDate(form.getCjrq(),
					"yyyyMMdd").getTime()));
		}

		return report;
	}

}
